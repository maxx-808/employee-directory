{"version":3,"sources":["Pages/Main.js","Pages/Gender.js","Pages/LName.js","Pages/over10.js","utils/API.js","components/employee/employees.js","components/navbar/navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Main","emps","JSON","parse","localStorage","getItem","scope","map","index","name","email","cell","gender","dob","registered","className","first","last","age","Gender","genEmps","sort","a","b","LName","lNameEmps","Over10","over10EmpsSort","filter","emp","axios","get","Employees","state","data","usersInit","API","then","res","console","log","results","setState","employees","setItem","stringify","catch","err","newEmps","clear","window","location","reload","this","onClick","Component","NavBar","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc85e973.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Main = () => {\r\n  //pulling employee data array from localstorage\r\n  const emps = JSON.parse(localStorage.getItem(\"employees\"));\r\n\r\n  //only starting the functions of the page if data is in local storage\r\n  //.map and such will throw errors for null data\r\n  if (emps !== null) {\r\n    //returning table of employees exactly in order of how it was in the array\r\n    return (\r\n      <div>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"col\">First Name</th>\r\n              <th scope=\"col\">Last Name</th>\r\n              <th scope=\"col\">Email</th>\r\n              <th scope=\"col\">Phone Number</th>\r\n              <th scope=\"col\">Gender</th>\r\n              <th scope=\"col\">Age</th>\r\n              <th scope=\"col\">Experience</th>\r\n            </tr>\r\n            {emps.map(\r\n              ({ name, email, cell, gender, dob, registered }, index) => (\r\n                <tr className=\"emp\" key={index}>\r\n                  <th scope=\"row\" className=\"fName\">\r\n                    {name.first}\r\n                  </th>\r\n                  <td className=\"lName\">{name.last}</td>\r\n                  <td className=\"email\">{email}</td>\r\n                  <td className=\"phone\">{cell}</td>\r\n                  <td className=\"gender\">{gender}</td>\r\n                  <td className=\"age\">{dob.age}</td>\r\n                  <td className=\"years\">{registered.age}</td>\r\n                </tr>\r\n              )\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n\r\n    //if data from local storage is null, no table shall be made\r\n  } else {\r\n    return (\r\n      <div>\r\n        <h1>NO EMPLOYEES SAVED! NO TABLE RENDERED</h1>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\nconst Gender = () => {\r\n  //pulling employee data array from localstorage\r\n  const emps = JSON.parse(localStorage.getItem(\"employees\"));\r\n\r\n  //only starting the functions of the page if data is in local storage\r\n  //.map and such will throw errors for null data\r\n  if (emps !== null) {\r\n    //sorting employee array by gender\r\n    const genEmps = emps.sort((a, b) => {\r\n      return a.gender > b.gender ? 1 : -1;\r\n    });\r\n\r\n    //returning table of employees based off of gender\r\n    return (\r\n      <div>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"col\">Gender</th>\r\n              <th scope=\"col\">First Name</th>\r\n              <th scope=\"col\">Last Name</th>\r\n              <th scope=\"col\">Email</th>\r\n              <th scope=\"col\">Phone Number</th>\r\n              <th scope=\"col\">Age</th>\r\n              <th scope=\"col\">Experience</th>\r\n            </tr>\r\n            {genEmps.map(\r\n              ({ name, email, cell, gender, dob, registered }, index) => (\r\n                <tr className=\"emp\" key={index}>\r\n                  <th scope=\"row\" className=\"gender\">\r\n                    {gender}\r\n                  </th>\r\n                  <td className=\"fName\">{name.first}</td>\r\n                  <td className=\"lName\">{name.last}</td>\r\n                  <td className=\"email\">{email}</td>\r\n                  <td className=\"phone\">{cell}</td>\r\n\r\n                  <td className=\"age\">{dob.age}</td>\r\n                  <td className=\"years\">{registered.age}</td>\r\n                </tr>\r\n              )\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n\r\n    //if data from local storage is null, no table shall be made\r\n  } else {\r\n    return (\r\n      <div>\r\n        <h1>NO EMPLOYEES SAVED! NO TABLE RENDERED</h1>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Gender;\r\n","import React from \"react\";\r\n\r\nconst LName = () => {\r\n  //pulling employee data array from localstorage\r\n  const emps = JSON.parse(localStorage.getItem(\"employees\"));\r\n\r\n  //only starting the functions of the page if data is in local storage\r\n  //.map and such will throw errors for null data\r\n  if (emps !== null) {\r\n    //sorting employees by lastname\r\n    const lNameEmps = emps.sort((a, b) => {\r\n      return a.name.last > b.name.last ? 1 : -1;\r\n    });\r\n\r\n    // returning table of employees based on last name\r\n    return (\r\n      <div>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"col\">Last Name</th>\r\n              <th scope=\"col\">First Name</th>\r\n              <th scope=\"col\">Email</th>\r\n              <th scope=\"col\">Phone Number</th>\r\n              <th scope=\"col\">Gender</th>\r\n              <th scope=\"col\">Age</th>\r\n              <th scope=\"col\">Experience</th>\r\n            </tr>\r\n            {lNameEmps.map(\r\n              ({ name, email, cell, gender, dob, registered }, index) => (\r\n                <tr className=\"emp\" key={index}>\r\n                  <th scope=\"row\" className=\"lName\">\r\n                    {name.last}\r\n                  </th>\r\n                  <td className=\"fName\">{name.first}</td>\r\n                  <td className=\"email\">{email}</td>\r\n                  <td className=\"phone\">{cell}</td>\r\n                  <td className=\"gender\">{gender}</td>\r\n                  <td className=\"age\">{dob.age}</td>\r\n                  <td className=\"years\">{registered.age}</td>\r\n                </tr>\r\n              )\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n\r\n    //if data from local storage is null, no table shall be made\r\n  } else {\r\n    return (\r\n      <div>\r\n        <h1>NO EMPLOYEES SAVED! NO TABLE RENDERED</h1>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default LName;\r\n","import React from \"react\";\r\n\r\nconst Over10 = () => {\r\n  //pulling employee data array from localstorage\r\n  const emps = JSON.parse(localStorage.getItem(\"employees\"));\r\n\r\n  //only starting the functions of the page if data is in local storage\r\n  //.map and such will throw errors for null data\r\n  if (emps !== null) {\r\n    //filtering out any employees with 9 or less years exp\r\n    const over10Emps = emps.filter((emp) => emp.registered.age > 9);\r\n\r\n    //sorting by years of experience\r\n    const over10EmpsSort = over10Emps.sort((a, b) => {\r\n      return a.registered.age > b.registered.age ? 1 : -1;\r\n    });\r\n\r\n    // returning table of employees based off of exp years\r\n    return (\r\n      <div>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"col\">Experience</th>\r\n              <th scope=\"col\">First Name</th>\r\n              <th scope=\"col\">Last Name</th>\r\n              <th scope=\"col\">Email</th>\r\n              <th scope=\"col\">Phone Number</th>\r\n              <th scope=\"col\">Gender</th>\r\n              <th scope=\"col\">Age</th>\r\n            </tr>\r\n            {over10EmpsSort.map(\r\n              ({ name, email, cell, gender, dob, registered }, index) => (\r\n                <tr className=\"emp\" key={index}>\r\n                  <th scope=\"row\" className=\"years\">\r\n                    {registered.age}\r\n                  </th>\r\n                  <td className=\"fName\">{name.first}</td>\r\n                  <td className=\"lName\">{name.last}</td>\r\n                  <td className=\"email\">{email}</td>\r\n                  <td className=\"phone\">{cell}</td>\r\n                  <td className=\"gender\">{gender}</td>\r\n                  <td className=\"age\">{dob.age}</td>\r\n                </tr>\r\n              )\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n\r\n    //if data from local storage is null, no table shall be made\r\n  } else {\r\n    return (\r\n      <div>\r\n        <h1>NO EMPLOYEES SAVED! NO TABLE RENDERED</h1>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Over10;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n  getUsers: function () {\r\n    return axios.get(\"https://randomuser.me/api/?results=50\");\r\n  },\r\n};\r\n","import React, { Component } from \"react\";\r\nimport API from \"../../utils/API\";\r\nimport \"./employees.css\";\r\n\r\nclass Employees extends Component {\r\n  state = {\r\n    data: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.usersInit();\r\n  }\r\n\r\n  usersInit = () => {\r\n    API.getUsers()\r\n      .then((res) => {\r\n        console.log(\"res.data.results: \", res.data.results);\r\n        let results = res.data.results;\r\n        this.setState({ data: results });\r\n\r\n        //variable to save data array from localStorage as well\r\n        //as a condition for the new data array to save to localstorage\r\n        const employees = JSON.parse(localStorage.getItem(\"employees\")) || null;\r\n\r\n        //if the variable employees === null meaning no data is\r\n        //being saved, then psuh api data array to localstorage\r\n        if (employees === null) {\r\n          localStorage.setItem(\"employees\", JSON.stringify(results));\r\n          console.log(\"emp \", employees);\r\n        }\r\n      })\r\n      .catch((err) => console.log(\"getUsers error: \" + err));\r\n  };\r\n\r\n  newEmps = () => {\r\n    localStorage.clear(\"employees\");\r\n    window.location.reload(false);\r\n  };\r\n\r\n  render() {\r\n    return <button onClick={() => this.newEmps()}>Get New Employees</button>;\r\n  }\r\n}\r\n\r\nexport default Employees;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Employees from \"../employee/employees\";\r\n\r\nclass NavBar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          Employee Directory\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <p id=\"sort\" className=\"nav-link\">\r\n                Sort By:\r\n              </p>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/g\">\r\n                Gender\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/l\">\r\n                Last Name\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/o\">\r\n                Experience over 10 years\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <div>\r\n            <button onClick={() => window.location.reload(false)}>\r\n              CLICK TO RELOAD\r\n            </button>\r\n            <Employees />\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { HashRouter, Route } from \"react-router-dom\";\n\nimport Main from \"./Pages/Main\";\nimport Gender from \"./Pages/Gender\";\nimport LName from \"./Pages/LName\";\nimport Over10 from \"./Pages/over10\";\nimport NavBar from \"./components/navbar/navbar\";\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <div className=\"App\">\n        <NavBar />\n\n        <Route exact path=\"/\" component={Main} />\n        <Route exact path=\"/g\" component={Gender} />\n        <Route exact path=\"/l\" component={LName} />\n        <Route exact path=\"/o\" component={Over10} />\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}